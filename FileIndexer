using System.Collections.Concurrent;
using System.Text.RegularExpressions;
using C__Final.Models; // Make sure this matches your actual namespace

public class FileIndexer
{
    public BlockingCollection<WordIndexEntry> IndexedWords = new();

    public void IndexDirectory(string directoryPath)
    {
        if (!Directory.Exists(directoryPath))
        {
            Console.WriteLine($"Directory not found: {directoryPath}");
            return;
        }

        foreach (var file in Directory.GetFiles(directoryPath, "*.txt"))
        {
            var wordCounts = new Dictionary<string, int>();
            var lines = File.ReadAllLines(file);

            foreach (var line in lines)
            {
                foreach (Match word in Regex.Matches(line.ToLower(), @"\b\w+\b"))
                {
                    if (!wordCounts.ContainsKey(word.Value))
                        wordCounts[word.Value] = 0;

                    wordCounts[word.Value]++;
                }
            }

            foreach (var kvp in wordCounts)
            {
                IndexedWords.Add(new WordIndexEntry
                {
                    FileName = Path.GetFileName(file),
                    Word = kvp.Key,
                    Count = kvp.Value
                });
            }
        }

        // Signal that we're done adding
        IndexedWords.CompleteAdding();
    }
}
